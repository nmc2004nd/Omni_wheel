<?xml version="1.0"?>
<launch>
    <!-- Arguments you can pass to this launch file -->
    <arg name="paused" default="false"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="false"/>

    <!-- Launch Gazebo with an empty world -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <!-- <arg name="world_name" value="$(find car_4wd)/worlds/maze.world"/> -->
        <arg name="world_name" value="$(find car_4wd)/worlds/empty.world"/>
        <arg name="debug" value="$(arg debug)" />
        <arg name="gui" value="$(arg gui)" />
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="$(arg use_sim_time)"/>
        <arg name="headless" value="$(arg headless)"/>
    </include>

    <!-- Load the URDF into the ROS Parameter Server -->
    <param name="robot_description" 
           command="$(find xacro)/xacro '$(find car_4wd)/urdf/main.urdf.xacro'" />

    <!-- Spawn the robot model in Gazebo -->
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
        args="-urdf -model omni_car -z 0.06  -param robot_description"/>


    <!-- Start the robot state publisher to publish TF transformations -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
          respawn="false" output="screen">
        <remap from="/joint_states" to="/omni_car/joint_states" />
    </node>

    <!-- Load controllers -->
    <rosparam file="$(find car_4wd)/config/joint_control.yaml" command="load" />

    <!-- Controllers-->
    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
        output="screen" ns="/omni_car"
        args="--namespace=/omni_car
	joint_state_controller
    front_left_joint_velocity_controller
    front_right_joint_velocity_controller
    rear_left_joint_velocity_controller
    rear_right_joint_velocity_controller
    
	" />

    </launch>